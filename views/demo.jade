extends layout

block link
  -var selected = 'demo';
  if !session.email
    -var login = false;
  else
    -var login = true;

block content
  .container.container-main.container-demo.en-font.padding-nav
    //- .row
    //-   .col-xs-12
        //- .panel
        //-   .panel-heading
        //-     h2 Connection
        //-   .panel-body
        //-     form
        //-       .col-md-5
        //-         label Host
        //-         input#urlInput.form-control(type='text', placeholder='URL', value='node.it.kmitl.ac.th')
        //-       .col-md-1
        //-         label Port
        //-         input#portInput.form-control(type='text', placeholder='URL', value='8883')
        //-       .col-md-4
        //-         label ClientID
        //-         input#clientIdInput.form-control(type='text')
        //-       .col-md-2
        //-         a#connectButton.btn.btn-primary.btn-raised.btn-material-blue(onclick='websocketclient.connect();') Connect
        //-       //- .col-md-2
        //-       //-   a#disconnectButton.btn.btn-primary.btn-raised.btn-material-blue(onclick='websocketclient.disconnect();') Disconnect
        //-       .col-md-4
        //-         label Username
        //-         input#userInput.form-control(type='text')
        //-       .col-md-3
        //-         label Password
        //-         input#pwInput.form-control(type='password')
        //-       .col-md-2
        //-         label Keep Alive
        //-         input#keepAliveInput.form-control(type='text', value='60')
        //-       .col-md-1
        //-         label SSL
        //-         .checkbox
        //-           label
        //-             input#sslInput(type='checkbox')
        //-       .col-md-2
        //-         label Clean Session
        //-         .checkbox
        //-           label
        //-             input#cleanSessionInput(type='checkbox', checked='checked', disabled='')
        //-       .col-md-8
        //-         label Last-Will Topic
        //-         input#lwTopicInput.form-control(type='text')
        //-       .col-md-2
        //-         label Last-Will QoS
        //-         select#lwQosInput.form-control.hidden-field(data-id='1447572063439-ftoeF')
        //-           option 0
        //-           option 1
        //-           option 2
        //-       .col-md-2
        //-         label Last-Will Retain
        //-         .checkbox
        //-           label
        //-             input#LWRInput(type='checkbox')
        //-       .col-md-12
        //-         label Last-Will Messsage
        //-         textarea#LWMInput.form-control.resize-vertical
    .row
      .col-md-8
        .panel
          .panel-body
            if session.email
              p.p-demo-head.break-word Publish to (Host: neutron.it.kmitl.ac.th Port: 8883)
            else
              p.p-demo-head.break-word Publish to (Host: neutron.it.kmitl.ac.th Port: 1883)
            form
              //- .col-md-6
              .col-md-12
                label Topic
                if session.email
                  input#publishTopic.form-control(type='text', value='#{usernameBroker}/TestTopic')
                else
                  input#publishTopic.form-control(type='text', value='TestTopic')
              //- .col-md-2
                //- label(for='publishQoSInput') QoS
                //- select#publishQoSInput.form-control.hidden-field()
                //-   option(value=0) 0
                //-   option(value=1) 1
                br
              //- .col-md-2
              //-   label Retain
              //-   .checkbox
              //-     label
              //-       input#publishRetain(type='checkbox')
              .col-md-12
                label Message
                textarea#publishPayload.form-control.resize-vertical
              .col-md-12.text-center(style='padding-top: 10px')
                a#publishButton.btn-homegreen Publish
                  //- (onclick="websocketclient.publish($('#publishTopic').val(),$('#publishPayload').val(),parseInt($('#publishQoSInput').val(),10),$('#publishRetain').is(':checked'))") 
        .panel
          .panel-body
            p.p-demo-head Messages
            .row
              ul#messEdit.col-md-12
      .col-md-4
        .panel
          .panel-body
            p.p-demo-head Subscribtions
            .col-md-12
              label Topic
              if session.email 
                input#subscribeTopic.form-control(type='text', value='#{usernameBroker}/TestTopic')
              else
                input#subscribeTopic.form-control(type='text', value='TestTopic')
              br
             //- .col-md-4
             //-  label QoS  
             //-  select#subscribeQoSInput.form-control.hidden-field()
             //-      option(value=0) 0
             //-      option(value=1) 1
            .col-md-12.text-center(style='padding: 10px; padding-bottom: 20px')
              a#addSubButton.btn-homegreen Add New Topic Subscription
              //- a#addSubButton.small.button.addSubButton(href='#data') Add New Topic Subscription
            .col-md-12
              ul#subTopicEdit.col-md-12
  script(type='text/javascript').
    console.log('#{session.email}');
    var subscribed = []; // Use for check subscribed and to unsubscribe
    var subscribeTopic;
    var subscribeQoSInput;

    function unSub(element){
      var unSubTopic = element.next().find(".topic").text();
      if (confirm("Do you want to unsubscribe?") == true) {
          element.parent().parent().remove();
          client.unsubscribe("#{usernameBroker}/"+unSubTopic);
          subscribed.splice(subscribed.indexOf(unSubTopic), 1);
          console.log(unSubTopic);
      }
    }

    function subscribeSubccess(){
      if($.inArray(subscribeTopic,subscribed) == -1){
        subscribed.push(subscribeTopic);
        $("#subTopicEdit").prepend('<div class="panel">'+
                              '<div class="panel-body">'+
                                '<button type="button" class="close" data-dismiss="panel" onclick="unSub($(this))" aria-label="Close">'+
                                '<span aria-hidden="true">&times;</span></button>'+
                                  '<label class="disc">'+
                                      'Subscribe to ' + '<br>'+ 
                                      'Topic : <span class="topic">' + subscribeTopic + '</span><br>'+ 
                                  '</label>'+
                              '</div>'+
                          '</div>');
      }else{
        alert("You already subscribe this topic.");
      }
    }

    function subscribeFail(){
      alert("Subscribe Fail.");
    }

    /////////////////////////////////////////////////////
    
    $(document).ready(function () {        
        console.log(window.location.protocol);

        if('#{session.email}'){
          client = new Paho.MQTT.Client("neutron.it.kmitl.ac.th", 8884, "/ws", "web_" + '#{session.email}', 10);
          client.onConnectionLost = onConnectionLost;
          client.onMessageArrived = onMessageArrived;

          var options = {
            userName: "#{usernameBroker}",
            password: "#{passwordBroker}",
            timeout: 5,
            useSSL: false ,
            mqttVersion: 3,
            onSuccess: onConnect,
            onFailure: doFail
          }

          client.connect(options);
          console.log("Authen");
        }else{
          client = new Paho.MQTT.Client("neutron.it.kmitl.ac.th", 1884, "/ws", "web_" + parseInt(Math.random() * 1000, 10));
          client.onConnectionLost = onConnectionLost;
          client.onMessageArrived = onMessageArrived;

          var options = {
            timeout: 5,
            useSSL: false,
            mqttVersion: 3,
            onSuccess: onConnect,
            onFailure: doFail
          }

          client.connect(options);
          console.log("Public");
        }

        function onConnect(){
          alert("Connect Successful");
          console.log("onConnected");
          $('#publishButton').on('click', function(){
            var publishPayload = $('#publishPayload').val();
            if("#{session.email}"){
              var publishTopic = $('#publishTopic').val();
            }else{
              var publishTopic = $('#publishTopic').val();
            }
            //- var publishQoSInput = parseInt($("#publishQoSInput :selected").val());

            message = new Paho.MQTT.Message(publishPayload);
            message.destinationName = publishTopic;
            //- message.qos = publishQoSInput;
            client.send(message);
            //- console.log(publishQoSInput);
          });

          $('#addSubButton').on('click', function(){
            subscribeTopic = $('#subscribeTopic').val();
            //- subscribeQoSInput = parseInt($("#subscribeQoSInput :selected").val());
            if("#{session.email}"){
              client.subscribe(subscribeTopic, 
                                {onSuccess: subscribeSubccess,
                                 onFailure: subscribeFail});
            }else{
              client.subscribe(subscribeTopic, 
                                {onSuccess: subscribeSubccess,
                                 onFailure: subscribeFail});
            }

            var childPanel = $("#subTopicEdit .panel");
            for(var i=0;i<childPanel.length;i++){  
              $(childPanel[i]).attr("id","sub-"+i);
            }
          });

        }

       function doFail(e){
          if(e){
            alert("Cannot Connect, Please Refresh");
          }
          console.log(e);
        }

        // called when the client loses its connection
        function onConnectionLost(responseObject) {
          if (responseObject.errorCode !== 0) {
            console.log("onConnectionLost:"+responseObject.errorMessage);
            alert("Connection Lost, Please Refresh");
            location.reload();
          }
        }

        // called when a message arrives
        function onMessageArrived(message) {
          if('#{session.email}'){
            $("#messEdit").prepend('<div class="panel">'+
                                    '<div class="panel-body">'+
                                        '<label class="disc">'+
                                            'from topic : ' + message.destinationName + '<br>'+
                                            'Message : ' + message.payloadString + '<br>'+
                                            //- 'QoS : ' + message.qos + '<br>'+
                                        '</label>'+
                                    '</div>'+
                                '</div>');
            console.log("onMessageArrived:"+message.destinationName);
            console.log("onMessageArrived:"+message.payloadString);
            //- console.log("onMessageArrived:"+message.qos);
          }else{
            $("#messEdit").prepend('<div class="panel">'+
                                    '<div class="panel-body">'+
                                        '<label class="disc">'+
                                            'from topic : ' + message.destinationName + '<br>'+
                                            'Message : ' + message.payloadString + '<br>'+
                                            //- 'QoS : ' + message.qos + '<br>'+
                                        '</label>'+
                                    '</div>'+
                                '</div>');
            console.log("onMessageArrived:"+message.destinationName);
            console.log("onMessageArrived:"+message.payloadString);
            //- console.log("onMessageArrived:"+message.qos);
          }
          
        }

    });
