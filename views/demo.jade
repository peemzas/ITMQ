extends layout

block content
  .container.container-main
    .row
      .col-xs-12
        //- .panel
        //-   .panel-heading
        //-     h2 Connection
        //-   .panel-body
        //-     form
        //-       .col-md-5
        //-         label Host
        //-         input#urlInput.form-control(type='text', placeholder='URL', value='node.it.kmitl.ac.th')
        //-       .col-md-1
        //-         label Port
        //-         input#portInput.form-control(type='text', placeholder='URL', value='8883')
        //-       .col-md-4
        //-         label ClientID
        //-         input#clientIdInput.form-control(type='text')
        //-       .col-md-2
        //-         a#connectButton.btn.btn-primary.btn-raised.btn-material-blue(onclick='websocketclient.connect();') Connect
        //-       //- .col-md-2
        //-       //-   a#disconnectButton.btn.btn-primary.btn-raised.btn-material-blue(onclick='websocketclient.disconnect();') Disconnect
        //-       .col-md-4
        //-         label Username
        //-         input#userInput.form-control(type='text')
        //-       .col-md-3
        //-         label Password
        //-         input#pwInput.form-control(type='password')
        //-       .col-md-2
        //-         label Keep Alive
        //-         input#keepAliveInput.form-control(type='text', value='60')
        //-       .col-md-1
        //-         label SSL
        //-         .checkbox
        //-           label
        //-             input#sslInput(type='checkbox')
        //-       .col-md-2
        //-         label Clean Session
        //-         .checkbox
        //-           label
        //-             input#cleanSessionInput(type='checkbox', checked='checked', disabled='')
        //-       .col-md-8
        //-         label Last-Will Topic
        //-         input#lwTopicInput.form-control(type='text')
        //-       .col-md-2
        //-         label Last-Will QoS
        //-         select#lwQosInput.form-control.hidden-field(data-id='1447572063439-ftoeF')
        //-           option 0
        //-           option 1
        //-           option 2
        //-       .col-md-2
        //-         label Last-Will Retain
        //-         .checkbox
        //-           label
        //-             input#LWRInput(type='checkbox')
        //-       .col-md-12
        //-         label Last-Will Messsage
        //-         textarea#LWMInput.form-control.resize-vertical
    .row
      .col-md-8
        .panel.shadow-z-2
          .panel-heading
            h2 Publish to (Host: node.it.kmitl.ac.th Port: 1884)
          .panel-body
            form
              //- .col-md-6
              .col-md-10
                label Topic
                input#publishTopic.form-control(type='text', value='demo/topic')
              .col-md-2
                label(for='publishQoSInput') QoS
                select#publishQoSInput.form-control.hidden-field()
                  option(value=0) 0
                  option(value=1) 1
                  option(value=2) 2
                br
              //- .col-md-2
              //-   label Retain
              //-   .checkbox
              //-     label
              //-       input#publishRetain(type='checkbox')
              .col-md-12
                label Message
                textarea#publishPayload.form-control.resize-vertical
              .col-md-12.text-center(style='padding-top: 20px')
                a#publishButton.btn.btn-primary.btn-raised.btn-material-blue Publish
                  //- (onclick="websocketclient.publish($('#publishTopic').val(),$('#publishPayload').val(),parseInt($('#publishQoSInput').val(),10),$('#publishRetain').is(':checked'))") 
        .panel.shadow-z-2
          .panel-heading
            h2 Messages
          .panel-body
            .row
              ul#messEdit.col-md-12
      .col-md-4
        .panel.shadow-z-2
          .panel-heading
            h2 Subscribtions
          .panel-body
            .col-md-12
              label Topic
              input#subscribeTopic.form-control(type='text', value='demo/topic')
              br
             .col-md-4
              label QoS  
              select#subscribeQoSInput.form-control.hidden-field()
                  option(value=0) 0
                  option(value=1) 1
                  option(value=2) 2
            .col-md-12.text-center(style='padding: 20px 0')
              a#addSubButton.btn.btn-primary.btn-raised.btn-material-blue Add New Topic Subscription
              //- a#addSubButton.small.button.addSubButton(href='#data') Add New Topic Subscription
            .col-md-12
              ul#subTopicEdit.col-md-12
  script(type='text/javascript').

    var subscribed = []; // Use for check subscribed and to unsubscribe

    function unSub(element){
          var unSubTopic = element.next().find(".topic").text();
          if (confirm("Do you want to unsubscribe?") == true) {
              element.parent().parent().remove();
              client.unsubscribe(unSubTopic);
              subscribed.splice(subscribed.indexOf(unSubTopic), 1);
              console.log(unSubTopic);
          }
          
    }

    $(document).ready(function () {
       client = new Paho.MQTT.Client("node.it.kmitl.ac.th", 8884, "web_" + parseInt(Math.random() * 1000, 10));
       client.onConnectionLost = onConnectionLost;
       client.onMessageArrived = onMessageArrived;
       var options = {
          timeout: 5,
          useSSL: false,
          onSuccess: onConnect,
          onFailure: doFail
       }

       client.connect(options);

       function onConnect(){
          alert("Connect Successful");
          console.log("onConnected");
          $('#publishButton').on('click', function(){
            var publishPayload = $('#publishPayload').val();
            var publishTopic = $('#publishTopic').val();
            var publishQoSInput = parseInt($("#publishQoSInput :selected").val());

            message = new Paho.MQTT.Message(publishPayload);
            message.destinationName = publishTopic;
            message.qos = publishQoSInput;
            client.send(message);
            console.log(publishQoSInput);
          });

          $('#addSubButton').on('click', function(){
            var subscribeTopic = $('#subscribeTopic').val();
            var subscribeQoSInput = parseInt($("#subscribeQoSInput :selected").val());
            if($.inArray(subscribeTopic,subscribed) == -1){
              subscribed.push(subscribeTopic);
              client.subscribe(subscribeTopic,{qos: subscribeQoSInput});

              $("#subTopicEdit").prepend('<div class="panel">'+
                                    '<div class="panel-body">'+
                                      '<button type="button" class="close" data-dismiss="panel" onclick="unSub($(this))" aria-label="Close">'+
                                      '<span aria-hidden="true">&times;</span></button>'+
                                        '<label class="disc">'+
                                            'Subscribe to ' + '<br>'+ 
                                            'Topic : <span class="topic">' + subscribeTopic + '</span><br>'+ 
                                        '</label>'+
                                    '</div>'+
                                '</div>');
            }else{
              alert("You already subscribe this topic.");
            }
            
            console.log(subscribeQoSInput);

            var childPanel = $("#subTopicEdit .panel");
            for(var i=0;i<childPanel.length;i++){  
              $(childPanel[i]).attr("id","sub-"+i);
            }
          });

       }

       function doFail(e){
          console.log(e);
          alert("Cannot Connect, Please Refresh");
        }

        // called when the client loses its connection
        function onConnectionLost(responseObject) {
          if (responseObject.errorCode !== 0) {
            console.log("onConnectionLost:"+responseObject.errorMessage);
            alert("Connection Lost, Please Refresh");
            location.reload();
          }
        }

        // called when a message arrives
        function onMessageArrived(message) {
          $("#messEdit").prepend('<div class="panel">'+
                                    '<div class="panel-body">'+
                                        '<label class="disc">'+
                                            'from topic : ' + message.destinationName + '<br>'+
                                            'Message : ' + message.payloadString + '<br>'+
                                            'QoS : ' + message.qos + '<br>'+
                                        '</label>'+
                                    '</div>'+
                                '</div>');
          console.log("onMessageArrived:"+message.destinationName);
          console.log("onMessageArrived:"+message.payloadString);
          console.log("onMessageArrived:"+message.qos);
        }

    });
